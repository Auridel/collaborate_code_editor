[{"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\app\\app.js":"1","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\console\\console.js":"2","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\editor\\editor.js":"3","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\index.js":"4","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\app\\app.js":"5","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\editor\\editor.js":"6"},{"size":631,"mtime":1606143772897,"results":"7","hashOfConfig":"8"},{"size":928,"mtime":1606143675088,"results":"9","hashOfConfig":"8"},{"size":1629,"mtime":1606145322690,"results":"10","hashOfConfig":"8"},{"size":214,"mtime":1606143368902,"results":"11","hashOfConfig":"8"},{"size":631,"mtime":1606143772897,"results":"12","hashOfConfig":"13"},{"size":1629,"mtime":1606145322690,"results":"14","hashOfConfig":"13"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mthtxn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mk1cfz",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\app\\app.js",[],"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\console\\console.js",["28"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst Console = ({code}) => {\r\n    const [logs, setLogs] = useState([]);\r\n    const [errors, setErrors] = useState([])\r\n\r\n    window.console.log = function(){\r\n        setLogs((prev) => [...prev, ...Array.from(arguments)]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setErrors([]);\r\n        if(code){\r\n            setLogs([]);\r\n            runCode(code);\r\n        }\r\n    }, [code])\r\n\r\n    const runCode = (data) => {\r\n        try{\r\n            eval(data);\r\n        }catch (e) {\r\n            setErrors([e.name, e.message])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"console\">\r\n            <h2 className=\"console-header\">Console output: </h2>\r\n            {logs.map((el, i) => <p key={\"log\" + i} className=\"message\">{el}</p>)}\r\n            {errors.map((el, i) => <p key={\"e\" + i} className=\"error\">{el}</p>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Console;","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\editor\\editor.js",[],"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\index.js",[],"D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\app\\app.js",[],"D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\editor\\editor.js",[],{"ruleId":"29","severity":1,"message":"30","line":21,"column":13,"nodeType":"31","messageId":"32","endLine":21,"endColumn":17},"no-eval","eval can be harmful.","CallExpression","unexpected"]