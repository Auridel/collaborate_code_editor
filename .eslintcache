[{"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\app\\app.js":"1","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\console\\console.js":"2","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\editor\\editor.js":"3","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\index.js":"4","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\app\\app.js":"5","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\editor\\editor.js":"6","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\console\\console.js":"7","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\socket.js":"8","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\popup\\popup.js":"9"},{"size":631,"mtime":1606143772897,"results":"10","hashOfConfig":"11"},{"size":928,"mtime":1606143675088,"results":"12","hashOfConfig":"11"},{"size":1629,"mtime":1606145322690,"results":"13","hashOfConfig":"11"},{"size":214,"mtime":1606143368902,"results":"14","hashOfConfig":"11"},{"size":2337,"mtime":1606215967103,"results":"15","hashOfConfig":"16"},{"size":1633,"mtime":1606214477708,"results":"17","hashOfConfig":"16"},{"size":955,"mtime":1606209679832,"results":"18","hashOfConfig":"16"},{"size":84,"mtime":1606150783960,"results":"19","hashOfConfig":"16"},{"size":858,"mtime":1606159199689,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mthtxn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mk1cfz",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\app\\app.js",[],"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\console\\console.js",["41"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst Console = ({code}) => {\r\n    const [logs, setLogs] = useState([]);\r\n    const [errors, setErrors] = useState([])\r\n\r\n    window.console.log = function(){\r\n        setLogs((prev) => [...prev, ...Array.from(arguments)]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setErrors([]);\r\n        if(code){\r\n            setLogs([]);\r\n            runCode(code);\r\n        }\r\n    }, [code])\r\n\r\n    const runCode = (data) => {\r\n        try{\r\n            eval(data);\r\n        }catch (e) {\r\n            setErrors([e.name, e.message])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"console\">\r\n            <h2 className=\"console-header\">Console output: </h2>\r\n            {logs.map((el, i) => <p key={\"log\" + i} className=\"message\">{el}</p>)}\r\n            {errors.map((el, i) => <p key={\"e\" + i} className=\"error\">{el}</p>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Console;","D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\components\\editor\\editor.js",[],"D:\\WebstormProjects\\ReactProjects\\code_editor\\src\\index.js",[],"D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\app\\app.js",[],"D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\editor\\editor.js",[],"D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\console\\console.js",["42"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst Console = ({code}) => {\r\n    const [logs, setLogs] = useState([]);\r\n    const [errors, setErrors] = useState([])\r\n\r\n    window._logs = function(){\r\n        setLogs((prev) => [...prev, ...Array.from(arguments)]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setErrors([]);\r\n        if(code){\r\n            setLogs([]);\r\n            runCode(code);\r\n        }\r\n    }, [code])\r\n\r\n    const runCode = (data) => {\r\n        try{\r\n            eval(data.replace(/console.log/g, \"_logs\"));\r\n        }catch (e) {\r\n            setErrors([e.name, e.message])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"console\">\r\n            <h2 className=\"console-header\">Console output: </h2>\r\n            {logs.map((el, i) => <p key={\"log\" + i} className=\"message\">{el}</p>)}\r\n            {errors.map((el, i) => <p key={\"e\" + i} className=\"error\">{el}</p>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Console;","D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\socket.js",[],"D:\\WebstormProjects\\ReactProjects\\collaborate_code_editor\\src\\components\\popup\\popup.js",[],{"ruleId":"43","severity":1,"message":"44","line":21,"column":13,"nodeType":"45","messageId":"46","endLine":21,"endColumn":17},{"ruleId":"43","severity":1,"message":"44","line":21,"column":13,"nodeType":"45","messageId":"46","endLine":21,"endColumn":17},"no-eval","eval can be harmful.","CallExpression","unexpected"]